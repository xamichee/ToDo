{"version":3,"sources":["Header/Header.jsx","TodoListItem/TodoListItem.jsx","TodoList/TodoList.jsx","TasksFilter/TasksFilter.jsx","Footer/Footer.jsx","App/initialState.js","App/App.jsx","index.jsx"],"names":["Header","state","label","onLabelChange","err","setState","target","value","addItem","this","props","className","onSubmit","preventDefault","type","placeholder","onChange","Component","defaultProps","TodoListItem","ev","onCheckClick","onDelete","onEdit","onEditSubmit","quest","title","id","done","created","classNames","completed","checked","aria-label","onClick","event","defaultValue","TodoList","quests","map","elem","TasksFilter","onFilter","name","Footer","onClearComplete","left","filters","initialState","date","Date","now","App","maxId","interval","idx","findIndex","el","newItem","slice","createItem","formatDistanceToNow","addSuffix","includeSeconds","deleteItem","editItem","oldItem","textContent","filter","setInterval","clearInterval","length","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.60ac4a06.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Header.css';\n\nexport default class Header extends Component {\n  static defaultProps = {\n    addItem: () => {},\n  };\n\n  static propTypes = {\n    addItem: PropTypes.func,\n  };\n\n  state = {\n    label: '',\n  };\n\n  onLabelChange = (err) => {\n    this.setState({\n      label: err.target.value,\n    });\n  };\n\n  render() {\n    const { addItem } = this.props;\n    const { label } = this.state;\n\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n        <form\n          onSubmit={(err) => {\n            err.preventDefault();\n            addItem(label);\n            this.setState({\n              label: '',\n            });\n          }}\n        >\n          <input\n            type=\"text\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            onChange={this.onLabelChange}\n            value={label}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './TodoListItem.css';\r\nimport classNames from 'classnames';\r\n\r\nexport default class TodoListItem extends Component {\r\n  static defaultProps = {\r\n    onCheckClick: () => {},\r\n    onDelete: () => {},\r\n    onEdit: () => {},\r\n    onEditSubmit: () => {},\r\n  };\r\n\r\n  static propTypes = {\r\n    quest: PropTypes.shape({\r\n      id: PropTypes.number,\r\n      done: PropTypes.bool,\r\n      title: PropTypes.string,\r\n      className: PropTypes.string,\r\n      created: PropTypes.string,\r\n    }).isRequired,\r\n    onCheckClick: PropTypes.func,\r\n    onDelete: PropTypes.func,\r\n    onEdit: PropTypes.func,\r\n    onEditSubmit: PropTypes.func,\r\n  };\r\n\r\n  state = {\r\n    label: null,\r\n  };\r\n\r\n  onLabelChange = (ev) => {\r\n    this.setState({\r\n      label: ev.target.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { onCheckClick, onDelete, onEdit, onEditSubmit, quest } = this.props;\r\n    const { title, id, done, created } = quest;\r\n    let { className } = quest;\r\n    const { label } = this.state;\r\n\r\n    className = classNames(className, {\r\n      completed: done,\r\n    });\r\n\r\n    return (\r\n      <li key={id} className={className}>\r\n        <div className=\"view\">\r\n          <input className=\"toggle\" type=\"checkbox\" checked={!!done} onChange={onCheckClick} />\r\n          <label>\r\n            <span className=\"description\">{title}</span>\r\n            <span className=\"created\">{created}</span>\r\n          </label>\r\n          <button aria-label=\"edit\" type=\"button\" className=\"icon icon-edit\" onClick={onEdit} />\r\n          <button aria-label=\"delete\" type=\"button\" className=\"icon icon-destroy\" onClick={onDelete} />\r\n        </div>\r\n        <form\r\n          onSubmit={(event) => {\r\n            event.preventDefault();\r\n            onEditSubmit(id, label);\r\n          }}\r\n        >\r\n          <input type=\"text\" className=\"edit\" defaultValue={title} onChange={this.onLabelChange} />\r\n        </form>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoList.css';\nimport TodoListItem from '../TodoListItem/TodoListItem';\n\nfunction TodoList(props) {\n  TodoList.defaultProps = {\n    onDelete: () => {},\n    onEdit: () => {},\n    onCheckClick: () => {},\n    onEditSubmit: () => {},\n  };\n\n  TodoList.propTypes = {\n    quests: PropTypes.arrayOf(PropTypes.object).isRequired,\n    onDelete: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCheckClick: PropTypes.func,\n    onEditSubmit: PropTypes.func,\n  };\n\n  const { quests, onDelete, onEdit, onCheckClick, onEditSubmit } = props;\n\n  return (\n    <ul className=\"todo-list\">\n      {quests.map((elem) => (\n        <TodoListItem\n          quest={elem}\n          onDelete={() => onDelete(elem.id)}\n          onEdit={() => onEdit(elem.id)}\n          onCheckClick={() => onCheckClick(elem.id)}\n          onEditSubmit={onEditSubmit}\n        />\n      ))}\n    </ul>\n  );\n}\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TasksFilter.css';\n\nfunction TasksFilter(props) {\n  const { elem, onFilter } = props;\n\n  TasksFilter.defaultProps = {\n    onFilter: () => {},\n  };\n\n  TasksFilter.propTypes = {\n    elem: PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string,\n      className: PropTypes.string,\n    }).isRequired,\n    onFilter: PropTypes.func,\n  };\n\n  return (\n    <li key={elem.id}>\n      <button type=\"button\" className={elem.className} onClick={onFilter}>\n        {elem.name}\n      </button>\n    </li>\n  );\n}\n\nexport default TasksFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TasksFilter from '../TasksFilter/TasksFilter';\nimport './Footer.css';\n\nfunction Footer(props) {\n  const { onFilter, onClearComplete, left, filters } = props;\n\n  Footer.defaultProps = {\n    onFilter: () => {},\n    onClearComplete: () => {},\n  };\n\n  Footer.propTypes = {\n    onFilter: PropTypes.func,\n    onClearComplete: PropTypes.func,\n    left: PropTypes.number.isRequired,\n    filters: PropTypes.arrayOf(PropTypes.object).isRequired,\n  };\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">{left} items left</span>\n      <ul className=\"filters\">\n        {filters.map((elem) => (\n          <TasksFilter elem={elem} onFilter={onFilter} />\n        ))}\n      </ul>\n      <button type=\"button\" className=\"clear-completed\" onClick={onClearComplete}>\n        Clear completed\n      </button>\n    </footer>\n  );\n}\n\nexport default Footer;\n","const initialState = {\r\n  quests: [\r\n    { id: 1, done: false, title: 'Заработать денег', className: '', date: Date.now(), created: null },\r\n    { id: 2, done: false, title: 'Заплатить налоги', className: '', date: Date.now(), created: null },\r\n    { id: 3, done: false, title: 'Спать спокойно', className: '', date: Date.now(), created: null },\r\n  ],\r\n\r\n  filters: [\r\n    { id: 1, name: 'All', className: 'selected' },\r\n    { id: 2, name: 'Active', className: '' },\r\n    { id: 3, name: 'Completed', className: '' },\r\n  ],\r\n};\r\n\r\nexport default initialState;","import React, { Component } from 'react';\nimport formatDistanceToNow from \"date-fns/formatDistanceToNow\";\n\nimport Header from '../Header/Header';\nimport TodoList from '../TodoList/TodoList';\nimport Footer from '../Footer/Footer';\n\nimport './App.css';\nimport initialState from './initialState'\n\n\nexport default class App extends Component {\n  maxId = 5;\n\n  interval = null;\n\n  state = initialState;\n\n  componentDidMount() {\n    this.setState(({quests}) => ({\n      quests: quests.map( (elem) => ({...elem, created: formatDistanceToNow(elem.date, { addSuffix: true, includeSeconds: true })}\n      ))\n    }));\n\n    this.interval = setInterval(() => {\n      this.setState(({quests}) => ({\n        quests: quests.map( (elem) => ({...elem, created: formatDistanceToNow(elem.date, { addSuffix: true, includeSeconds: true })}\n        ))\n      }))\n    }, 5000)\n  }\n\n  componentDidUpdate() {\n    clearInterval(this.interval);\n    this.interval = setInterval(() => {\n      this.setState(({quests}) => ({\n        quests: quests.map( (elem) => ({...elem, created: formatDistanceToNow(elem.date, { addSuffix: true, includeSeconds: true })}\n        ))\n      }))\n    }, 5000)\n  }\n\n  onCheckClick = (id) => {\n    const { quests } = this.state;\n    const idx = quests.findIndex((el) => el.id === id);\n    const newItem = { ...quests[idx], done: !quests[idx].done };\n    this.setState(() => ({\n      quests: [...quests.slice(0, idx), newItem, ...quests.slice(idx + 1)],\n    }));\n  };\n\n  createItem = (title) => {\n    this.maxId += 1;\n    return {\n      id: this.maxId,\n      done: false,\n      title,\n      className: \"\",\n      date: Date.now(),\n      created: formatDistanceToNow(Date.now(), { addSuffix: true, includeSeconds: true }),\n    };\n  };\n\n  addItem = (title) => {\n    const newItem = this.createItem(title);\n    this.setState(({ quests }) => ({\n      quests: [newItem, ...quests],\n    }));\n  };\n\n  deleteItem = (id) => {\n    this.setState(({ quests }) => {\n      const idx = quests.findIndex((el) => el.id === id);\n      return {\n        quests: [...quests.slice(0, idx), ...quests.slice(idx + 1)],\n      };\n    });\n  };\n\n  editItem = (id) => {\n    this.setState(({ quests }) => {\n      const idx = quests.findIndex((el) => el.id === id);\n      const newItem = { ...quests[idx], className: \"editing\" };\n\n      return {\n        quests: [...quests.slice(0, idx), newItem, ...quests.slice(idx + 1)],\n      };\n    });\n  };\n\n  onEditSubmit = (id, value) => {\n    this.setState(({ quests }) => {\n      const idx = quests.findIndex((el) => el.id === id);\n      if (value) {\n        const newItem = { ...quests[idx], title: value, className: \"\" };\n        return {\n          quests: [...quests.slice(0, idx), newItem, ...quests.slice(idx + 1)],\n        };\n      }\n      const oldItem = { ...quests[idx], className: \"\" };\n      return {\n        quests: [...quests.slice(0, idx), oldItem, ...quests.slice(idx + 1)],\n      };\n    });\n  };\n\n  onFilter = (event) => {\n    this.setState(({ quests, filters }) => ({\n      quests: quests.map((elem) => {\n        switch (event.target.textContent) {\n          case 'All':\n            return { ...elem, className: \"\" };\n          case 'Completed':\n            if (!elem.done) return { ...elem, className: \"hidden\" };\n            return { ...elem, className: '' };\n          case 'Active':\n            if (elem.done) return { ...elem, className: \"hidden\" };\n            return { ...elem, className: '' };\n          default:\n            return null;\n        }\n      }),\n      filters: filters.map((elem) =>\n        event.target.textContent === elem.name ? { ...elem, className: \"selected\" } : { ...elem, className: \"\" }\n      ),\n    }));\n  };\n\n  onClearComplete = () => {\n    this.setState(({ quests }) => ({\n      quests: quests.filter((elem) => !elem.done),\n    }));\n  };\n\n  render() {\n    const { quests, filters } = this.state;\n    const left = quests.filter((elem) => !elem.done).length;\n\n    return (\n      <section className=\"todoapp\">\n        <Header addItem={this.addItem} />\n        <section className=\"main\">\n          <TodoList\n              quests={quests}\n              onDelete={this.deleteItem}\n              onEdit={this.editItem}\n              onCheckClick={this.onCheckClick}\n              onEditSubmit={this.onEditSubmit}\n          />\n          <Footer onFilter={this.onFilter} onClearComplete={this.onClearComplete} left={left} filters={filters} />\n        </section>\n      </section>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\n\r\nimport './style.css';\r\n\r\nimport App from './App/App';\r\n\r\nReactDom.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}