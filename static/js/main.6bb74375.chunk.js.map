{"version":3,"sources":["Header/Header.jsx","TodoListItem/TodoListItem.jsx","TodoList/TodoList.jsx","TasksFilter/TasksFilter.jsx","Footer/Footer.jsx","App/App.jsx","index.jsx"],"names":["Header","state","label","onLabelChange","err","setState","target","value","addItem","this","props","className","onSubmit","preventDefault","type","placeholder","onChange","Component","defaultProps","TodoListItem","ev","onCheckClick","onDelete","onEdit","onEditSubmit","quest","title","id","done","date","classNames","completed","checked","formatDistanceToNow","aria-label","onClick","event","defaultValue","TodoList","quests","map","elem","TasksFilter","onFilter","name","Footer","onClearComplete","left","filters","App","maxId","Date","now","idx","findIndex","el","newItem","slice","createItem","deleteItem","editItem","oldItem","textContent","filter","length","ReactDom","render","document","getElementById","setInterval"],"mappings":"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","file":"static/js/main.6bb74375.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Header.css';\n\nexport default class Header extends Component {\n  static defaultProps = {\n    addItem: () => {},\n  };\n\n  static propTypes = {\n    addItem: PropTypes.func,\n  };\n\n  state = {\n    label: '',\n  };\n\n  onLabelChange = (err) => {\n    this.setState({\n      label: err.target.value,\n    });\n  };\n\n  render() {\n    const { addItem } = this.props;\n    const { label } = this.state;\n\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n        <form\n          onSubmit={(err) => {\n            err.preventDefault();\n            addItem(label);\n            this.setState({\n              label: '',\n            });\n          }}\n        >\n          <input\n            type=\"text\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            onChange={this.onLabelChange}\n            value={label}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoListItem.css';\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow';\nimport classNames from 'classnames';\n\nexport default class TodoListItem extends Component {\n  static defaultProps = {\n    onCheckClick: () => {},\n    onDelete: () => {},\n    onEdit: () => {},\n    onEditSubmit: () => {},\n  };\n\n  static propTypes = {\n    quest: PropTypes.shape({\n      id: PropTypes.number,\n      done: PropTypes.bool,\n      title: PropTypes.string,\n      className: PropTypes.string,\n      date: PropTypes.instanceOf(Date),\n    }).isRequired,\n    onCheckClick: PropTypes.func,\n    onDelete: PropTypes.func,\n    onEdit: PropTypes.func,\n    onEditSubmit: PropTypes.func,\n  };\n\n  state = {\n    label: '',\n  };\n\n  onLabelChange = (ev) => {\n    this.setState({\n      label: ev.target.value,\n    });\n  };\n\n  render() {\n    const { onCheckClick, onDelete, onEdit, onEditSubmit, quest } = this.props;\n    const { title, id, done, date } = quest;\n    let { className } = quest;\n    const { label } = this.state;\n\n    className = classNames(className, {\n      completed: done,\n    });\n\n    return (\n      <li key={id} className={className}>\n        <div className=\"view\">\n          <input className=\"toggle\" type=\"checkbox\" checked={!!done} onChange={onCheckClick} />\n          <label>\n            <span className=\"description\">{title}</span>\n            <span className=\"created\">{formatDistanceToNow(date)}</span>\n          </label>\n          <button aria-label=\"edit\" type=\"button\" className=\"icon icon-edit\" onClick={onEdit} />\n          <button aria-label=\"delete\" type=\"button\" className=\"icon icon-destroy\" onClick={onDelete} />\n        </div>\n        <form\n          onSubmit={(event) => {\n            event.preventDefault();\n            onEditSubmit(id, label);\n          }}\n        >\n          <input type=\"text\" className=\"edit\" defaultValue={title} onChange={this.onLabelChange} />\n        </form>\n      </li>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoList.css';\nimport TodoListItem from '../TodoListItem/TodoListItem';\n\nfunction TodoList(props) {\n  TodoList.defaultProps = {\n    onDelete: () => {},\n    onEdit: () => {},\n    onCheckClick: () => {},\n    onEditSubmit: () => {},\n  };\n\n  TodoList.propTypes = {\n    quests: PropTypes.arrayOf(PropTypes.object).isRequired,\n    onDelete: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCheckClick: PropTypes.func,\n    onEditSubmit: PropTypes.func,\n  };\n\n  const { quests, onDelete, onEdit, onCheckClick, onEditSubmit } = props;\n\n  return (\n    <ul className=\"todo-list\">\n      {quests.map((elem) => (\n        <TodoListItem\n          quest={elem}\n          onDelete={() => onDelete(elem.id)}\n          onEdit={() => onEdit(elem.id)}\n          onCheckClick={() => onCheckClick(elem.id)}\n          onEditSubmit={onEditSubmit}\n        />\n      ))}\n    </ul>\n  );\n}\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TasksFilter.css';\n\nfunction TasksFilter(props) {\n  const { elem, onFilter } = props;\n\n  TasksFilter.defaultProps = {\n    onFilter: () => {},\n  };\n\n  TasksFilter.propTypes = {\n    elem: PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string,\n      className: PropTypes.string,\n    }).isRequired,\n    onFilter: PropTypes.func,\n  };\n\n  return (\n    <li key={elem.id}>\n      <button type=\"button\" className={elem.className} onClick={onFilter}>\n        {elem.name}\n      </button>\n    </li>\n  );\n}\n\nexport default TasksFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TasksFilter from '../TasksFilter/TasksFilter';\nimport './Footer.css';\n\nfunction Footer(props) {\n  const { onFilter, onClearComplete, left, filters } = props;\n\n  Footer.defaultProps = {\n    onFilter: () => {},\n    onClearComplete: () => {},\n  };\n\n  Footer.propTypes = {\n    onFilter: PropTypes.func,\n    onClearComplete: PropTypes.func,\n    left: PropTypes.number.isRequired,\n    filters: PropTypes.arrayOf(PropTypes.object).isRequired,\n  };\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">{left} items left</span>\n      <ul className=\"filters\">\n        {filters.map((elem) => (\n          <TasksFilter elem={elem} onFilter={onFilter} />\n        ))}\n      </ul>\n      <button type=\"button\" className=\"clear-completed\" onClick={onClearComplete}>\n        Clear completed\n      </button>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\n\nimport Header from '../Header/Header';\nimport TodoList from '../TodoList/TodoList';\nimport Footer from '../Footer/Footer';\n\nimport './App.css';\n\nexport default class App extends Component {\n  maxId = 5;\n\n  state = {\n    quests: [\n      { id: 1, done: false, title: 'Заработать денег', className: '', date: Date.now() },\n      { id: 2, done: false, title: 'Заплатить налоги', className: '', date: Date.now() },\n      { id: 3, done: false, title: 'Спать спокойно', className: '', date: Date.now() },\n    ],\n\n    filters: [\n      { id: 1, name: 'All', className: 'selected' },\n      { id: 2, name: 'Active', className: '' },\n      { id: 3, name: 'Completed', className: '' },\n    ],\n  };\n\n  onCheckClick = (id) => {\n    const { quests } = this.state;\n    const idx = quests.findIndex((el) => el.id === id);\n    const newItem = { ...quests[idx], done: !quests[idx].done };\n    this.setState(() => ({\n      quests: [...quests.slice(0, idx), newItem, ...quests.slice(idx + 1)],\n    }));\n  };\n\n  createItem = (title) => {\n    this.maxId += 1;\n    return {\n      id: this.maxId,\n      done: false,\n      title,\n      className: '',\n      date: Date.now(),\n    };\n  };\n\n  addItem = (title) => {\n    const newItem = this.createItem(title);\n    this.setState(({ quests }) => ({\n      quests: [newItem, ...quests],\n    }));\n  };\n\n  deleteItem = (id) => {\n    this.setState(({ quests }) => {\n      const idx = quests.findIndex((el) => el.id === id);\n      return {\n        quests: [...quests.slice(0, idx), ...quests.slice(idx + 1)],\n      };\n    });\n  };\n\n  editItem = (id) => {\n    this.setState(({ quests }) => {\n      const idx = quests.findIndex((el) => el.id === id);\n      const newItem = { ...quests[idx], className: 'editing' };\n\n      return {\n        quests: [...quests.slice(0, idx), newItem, ...quests.slice(idx + 1)],\n      };\n    });\n  };\n\n  onEditSubmit = (id, value) => {\n    this.setState(({ quests }) => {\n      const idx = quests.findIndex((el) => el.id === id);\n      if (value) {\n        const newItem = { ...quests[idx], title: value, className: '' };\n        return {\n          quests: [...quests.slice(0, idx), newItem, ...quests.slice(idx + 1)],\n        };\n      }\n      const oldItem = { ...quests[idx], className: '' };\n      return {\n        quests: [...quests.slice(0, idx), oldItem, ...quests.slice(idx + 1)],\n      };\n    });\n  };\n\n  onFilter = (event) => {\n    this.setState(({ quests, filters }) => ({\n      quests: quests.map((elem) => {\n        switch (event.target.textContent) {\n          case 'All':\n            return { ...elem, className: '' };\n          case 'Completed':\n            if (!elem.done) return { ...elem, className: 'hidden' };\n            return { ...elem, className: '' };\n          case 'Active':\n            if (elem.done) return { ...elem, className: 'hidden' };\n            return { ...elem, className: '' };\n          default:\n            return null;\n        }\n      }),\n      filters: filters.map((elem) =>\n        event.target.textContent === elem.name ? { ...elem, className: 'selected' } : { ...elem, className: '' }\n      ),\n    }));\n  };\n\n  onClearComplete = () => {\n    this.setState(({ quests }) => ({\n      quests: quests.filter((elem) => !elem.done),\n    }));\n  };\n\n  render() {\n    const { quests, filters } = this.state;\n    const left = quests.filter((elem) => !elem.done).length;\n\n    return (\n      <section className=\"todoapp\">\n        <Header addItem={this.addItem} />\n        <section className=\"main\">\n          <TodoList\n            quests={quests}\n            onDelete={this.deleteItem}\n            onEdit={this.editItem}\n            onCheckClick={this.onCheckClick}\n            onEditSubmit={this.onEditSubmit}\n          />\n          <Footer onFilter={this.onFilter} onClearComplete={this.onClearComplete} left={left} filters={filters} />\n        </section>\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDom from 'react-dom';\n\nimport './style.css';\n\nimport App from './App/App';\n\nReactDom.render(<App />, document.getElementById('root'));\nsetInterval(() => ReactDom.render(<App />, document.getElementById('root')), 3000);\n\n"],"sourceRoot":""}