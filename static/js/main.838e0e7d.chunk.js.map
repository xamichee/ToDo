{"version":3,"sources":["Header/Header.jsx","TodoListItem/TodoListItem.jsx","TodoList/TodoList.jsx","TasksFilter/TasksFilter.jsx","Footer/Footer.jsx","App/initialState.js","App/api.js","App/App.jsx","index.jsx"],"names":["Header","props","addItem","useState","label","setLabel","defaultProps","className","onSubmit","ev","preventDefault","type","placeholder","onChange","target","value","TodoListItem","onCheckClick","onDelete","onEdit","onEditSubmit","quest","title","id","done","created","timer","setTimer","timerColor","setTimerColor","pause","setPause","minutes","getMinutes","seconds","getSeconds","minutesDraw","secondsDraw","useEffect","interval","setInterval","tmr","clearInterval","classNames","completed","checked","aria-label","name","onClick","event","defaultValue","TodoList","quests","map","elem","TasksFilter","onFilter","Footer","onClearComplete","left","filters","initialState","date","Date","now","maxId","callback","newItem","formatDistanceToNow","addSuffix","includeSeconds","createItem","Quest","App","setQuests","setFilters","filter","length","qsts","idx","findIndex","el","slice","deleteItem","editItem","array","onCheck","oldItem","callback1","callback2","Quests","textContent","Filters","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.838e0e7d.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Header.css';\r\n\r\nexport default function Header(props) {\r\n  const {addItem} = props;\r\n  const [label, setLabel] = useState('');\r\n\r\n  Header.defaultProps = {\r\n    addItem: () => {\r\n    },\r\n  };\r\n\r\n  Header.propTypes = {\r\n    addItem: PropTypes.func,\r\n  }\r\n\r\n  const onLabelChange = (ev) => setLabel(ev.target.value);\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>todos</h1>\r\n      <form\r\n        onSubmit={(ev) => {\r\n          ev.preventDefault();\r\n          addItem(label);\r\n          setLabel('');\r\n        }}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          className=\"new-todo\"\r\n          placeholder=\"What needs to be done?\"\r\n          onChange={onLabelChange}\r\n          value={label}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './TodoListItem.css';\r\nimport classNames from 'classnames';\r\nimport { getMinutes, getSeconds } from 'date-fns';\r\n\r\nexport default function TodoListItem(props) {\r\n  const {onCheckClick, onDelete, onEdit, onEditSubmit, quest} = props;\r\n  const {title, id, done, created} = quest;\r\n\r\n  let {className} = quest;\r\n\r\n  const [label, setLabel] = useState(title);\r\n  const [timer, setTimer] = useState(0);\r\n  const [timerColor, setTimerColor] = useState('black');\r\n  const [pause, setPause] = useState(true);\r\n\r\n\r\n  const minutes = getMinutes(timer);\r\n  const seconds = getSeconds(timer);\r\n  const minutesDraw = minutes < 10 ? `0${minutes}` : minutes;\r\n  const secondsDraw = seconds < 10 ? `0${seconds}` : seconds;\r\n\r\n  TodoListItem.propTypes = {\r\n    quest: PropTypes.shape({\r\n      id: PropTypes.number,\r\n      done: PropTypes.bool,\r\n      title: PropTypes.string,\r\n      className: PropTypes.string,\r\n      created: PropTypes.string,\r\n    }).isRequired,\r\n    onCheckClick: PropTypes.func,\r\n    onDelete: PropTypes.func,\r\n    onEdit: PropTypes.func,\r\n    onEditSubmit: PropTypes.func,\r\n  }\r\n\r\n  TodoListItem.defaultProps = {\r\n    onCheckClick: () => {\r\n    },\r\n    onDelete: () => {\r\n    },\r\n    onEdit: () => {\r\n    },\r\n    onEditSubmit: () => {\r\n    },\r\n  };\r\n\r\n  const onLabelChange = (ev) => setLabel(ev.target.value);\r\n\r\n  const timeGo = () => {\r\n    if (pause && !done) {\r\n      setTimerColor('green');\r\n      setPause(false);\r\n    }\r\n  };\r\n\r\n  const timePause = () => {\r\n    if (!pause) {\r\n      setPause(true);\r\n      setTimerColor('black');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let interval;\r\n    if (!pause) {\r\n      const timerFunc = () => {\r\n        setTimer(tmr => tmr + 1000);\r\n      }\r\n      interval = setInterval(timerFunc, 1000);\r\n    }\r\n    return () => {\r\n      clearInterval(interval);\r\n    }\r\n  }, [pause]);\r\n\r\n  className = classNames(className, {\r\n    completed: done,\r\n  });\r\n\r\n  return (\r\n    <li className={className}>\r\n      <div className=\"view\">\r\n        <input className=\"toggle\" type=\"checkbox\" checked={!!done} onChange={onCheckClick}/>\r\n        <label>\r\n          <span className={`title ${timerColor}`}>{title}</span>\r\n          <span className=\"description timer\">\r\n              <button aria-label=\"play\" className=\"icon icon-play\" type=\"button\" name=\"play\" onClick={timeGo}/>\r\n              <button aria-label=\"pause\" className=\"icon icon-pause\" type=\"button\" name=\"pause\" onClick={timePause}/>\r\n              <span className=\"time\">\r\n                {minutesDraw}:{secondsDraw}\r\n              </span>\r\n            </span>\r\n          <span className=\"description\">{created}</span>\r\n        </label>\r\n        <button aria-label=\"edit\" type=\"button\" className=\"icon icon-edit\" onClick={onEdit}/>\r\n        <button aria-label=\"delete\" type=\"button\" className=\"icon icon-destroy\" onClick={onDelete}/>\r\n      </div>\r\n      <form\r\n        onSubmit={(event) => {\r\n          event.preventDefault();\r\n          onEditSubmit(id, label);\r\n        }}\r\n      >\r\n        <input type=\"text\" className=\"edit\" defaultValue={title} onChange={onLabelChange}/>\r\n      </form>\r\n    </li>\r\n  );\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './TodoList.css';\r\nimport TodoListItem from '../TodoListItem/TodoListItem';\r\n\r\nexport default function TodoList(props) {\r\n  TodoList.defaultProps = {\r\n    onDelete: () => {\r\n    },\r\n    onEdit: () => {\r\n    },\r\n    onCheckClick: () => {\r\n    },\r\n    onEditSubmit: () => {\r\n    },\r\n  };\r\n\r\n  TodoList.propTypes = {\r\n    quests: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    onDelete: PropTypes.func,\r\n    onEdit: PropTypes.func,\r\n    onCheckClick: PropTypes.func,\r\n    onEditSubmit: PropTypes.func,\r\n  };\r\n\r\n  const {quests, onDelete, onEdit, onCheckClick, onEditSubmit} = props;\r\n\r\n  return (\r\n    <ul className=\"todo-list\">\r\n      {quests.map((elem) => (\r\n        <TodoListItem\r\n          key={elem.id}\r\n          quest={elem}\r\n          onDelete={() => onDelete(elem.id)}\r\n          onEdit={() => onEdit(elem.id)}\r\n          onCheckClick={() => onCheckClick(elem.id)}\r\n          onEditSubmit={onEditSubmit}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './TasksFilter.css';\r\n\r\nexport default function TasksFilter(props) {\r\n  const {elem, onFilter} = props;\r\n\r\n  TasksFilter.defaultProps = {\r\n    onFilter: () => {\r\n    },\r\n  };\r\n\r\n  TasksFilter.propTypes = {\r\n    elem: PropTypes.shape({\r\n      id: PropTypes.number,\r\n      name: PropTypes.string,\r\n      className: PropTypes.string,\r\n    }).isRequired,\r\n    onFilter: PropTypes.func,\r\n  };\r\n\r\n  return (\r\n    <li>\r\n      <button type=\"button\" className={elem.className} onClick={onFilter}>\r\n        {elem.name}\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TasksFilter from '../TasksFilter/TasksFilter';\r\nimport './Footer.css';\r\n\r\nexport default function Footer(props) {\r\n  const {onFilter, onClearComplete, left, filters} = props;\r\n\r\n  Footer.defaultProps = {\r\n    onFilter: () => {\r\n    },\r\n    onClearComplete: () => {\r\n    },\r\n  };\r\n\r\n  Footer.propTypes = {\r\n    onFilter: PropTypes.func,\r\n    onClearComplete: PropTypes.func,\r\n    left: PropTypes.number.isRequired,\r\n    filters: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  };\r\n\r\n  return (\r\n    <footer className=\"footer\">\r\n      <span className=\"todo-count\">{left} items left</span>\r\n      <ul className=\"filters\">\r\n        {filters.map((elem) => (\r\n          <TasksFilter key={elem.id} elem={elem} onFilter={onFilter}/>\r\n        ))}\r\n      </ul>\r\n      <button type=\"button\" className=\"clear-completed\" onClick={onClearComplete}>\r\n        Clear completed\r\n      </button>\r\n    </footer>\r\n  );\r\n};\r\n","const initialState = {\r\n  quests: [\r\n    { id: 1, done: false, title: 'Пункт 1', className: '', date: Date.now(), created: null },\r\n    { id: 2, done: false, title: 'Пункт 2', className: '', date: Date.now(), created: null },\r\n    { id: 3, done: false, title: 'Пункт 3', className: '', date: Date.now(), created: null },\r\n  ],\r\n\r\n  filters: [\r\n    { id: 1, name: 'All', className: 'selected' },\r\n    { id: 2, name: 'Active', className: '' },\r\n    { id: 3, name: 'Completed', className: '' },\r\n  ],\r\n};\r\n\r\nexport default initialState;","import formatDistanceToNow from \"date-fns/formatDistanceToNow\";\r\n\r\nlet maxId = 5;\r\n\r\nconst createItem = (title) => {\r\n  maxId += 1;\r\n  return {\r\n    id: maxId,\r\n    done: false,\r\n    title,\r\n    className: '',\r\n    date: Date.now(),\r\n    created: formatDistanceToNow(Date.now(), {addSuffix: true, includeSeconds: true}),\r\n  }\r\n};\r\n\r\nexport function addItem(title, callback) {\r\n  const newItem = createItem(title);\r\n  callback((Quest) => [newItem, ...Quest]);\r\n}\r\n\r\nexport function onCheck(id, array, callback) {\r\n  const idx = array.findIndex((el) => el.id === id);\r\n  const newItem = { ...array[idx], done: !array[idx].done };\r\n  callback((Quest) => [...Quest.slice(0, idx), newItem, ...Quest.slice(idx + 1)]);\r\n}\r\n\r\nexport function deleteItem(id, callback) {\r\n  callback(qsts => {\r\n    const idx = qsts.findIndex((el) => el.id === id);\r\n    return [...qsts.slice(0, idx), ...qsts.slice(idx + 1)]\r\n  });\r\n}\r\n\r\nexport function editItem (id, callback)  {\r\n  callback(Quest => {\r\n    const idx = Quest.findIndex((el) => el.id === id);\r\n    const newItem = { ...Quest[idx], className: 'editing' };\r\n\r\n    return [...Quest.slice(0, idx), newItem, ...Quest.slice(idx + 1)]\r\n  });\r\n}\r\n\r\nexport function onEditSubmit (id, value, callback) {\r\n  callback(Quest => {\r\n    const idx = Quest.findIndex((el) => el.id === id);\r\n    if (value) {\r\n      const newItem = { ...Quest[idx], title: value, className: '' };\r\n      return  [...Quest.slice(0, idx), newItem, ...Quest.slice(idx + 1)]\r\n    }\r\n    const oldItem = { ...Quest[idx], className: '' };\r\n    return [...Quest.slice(0, idx), oldItem, ...Quest.slice(idx + 1)]\r\n  });\r\n}\r\n\r\nexport function onFilter (event, callback1, callback2) {\r\n  callback1(Quests => (\r\n    Quests.map((elem) => {\r\n      switch (event.target.textContent) {\r\n        case 'All':\r\n          return {...elem, className: ''};\r\n        case 'Completed':\r\n          if (!elem.done) return {...elem, className: 'hidden'};\r\n          return {...elem, className: ''};\r\n        case 'Active':\r\n          if (elem.done) return {...elem, className: 'hidden'};\r\n          return {...elem, className: ''};\r\n        default:\r\n          return null;\r\n      }\r\n    })))\r\n\r\n  callback2(Filters => Filters.map((elem) =>\r\n    event.target.textContent === elem.name ? { ...elem, className: 'selected' } : { ...elem, className: '' })\r\n  );\r\n}","import React, { useEffect, useState } from 'react';\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow';\n\nimport Header from '../Header/Header';\nimport TodoList from '../TodoList/TodoList';\nimport Footer from '../Footer/Footer';\n\nimport './App.css';\nimport initialState from './initialState';\nimport {onCheck, addItem, deleteItem, editItem, onEditSubmit, onFilter} from \"./api\";\n\nexport default function App() {\n  const [quests, setQuests] = useState(initialState.quests);\n  const [filters, setFilters] = useState(initialState.filters);\n\n  useEffect(() => {\n    setQuests((Quest) => Quest.map((elem) => ({\n        ...elem,\n        created: formatDistanceToNow(elem.date, {addSuffix: true, includeSeconds: true})\n      }))\n    );\n\n    const interval = setInterval(() => {\n      setQuests((Quest) => Quest.map((elem) => ({\n          ...elem,\n          created: formatDistanceToNow(elem.date, {addSuffix: true, includeSeconds: true})\n        }))\n      )\n    }, 5000);\n\n    return () => clearInterval(interval);\n  }, [])\n\n  const onCheckClick = (id) => onCheck(id, quests, setQuests);\n\n  const addTodoItem = (title) => addItem(title, setQuests);\n\n  const deleteTodoItem = (id) => deleteItem(id, setQuests);\n\n  const editTodoItem = (id) => editItem(id, setQuests);\n\n  const onEditItemSubmit = (id, value) => onEditSubmit(id, value, setQuests)\n\n  const onItemsFilter = (event) => onFilter(event, setQuests, setFilters);\n\n  const onClearComplete = () => {\n    setQuests(Quests => Quests.filter((elem) => !elem.done))\n  };\n\n  const left = quests.filter((elem) => !elem.done).length;\n\n  return (\n    <section className=\"todoapp\">\n      <Header addItem={addTodoItem}/>\n      <section className=\"main\">\n        <TodoList\n          quests={quests}\n          onDelete={deleteTodoItem}\n          onEdit={editTodoItem}\n          onCheckClick={onCheckClick}\n          onEditSubmit={onEditItemSubmit}\n        />\n        <Footer onFilter={onItemsFilter} onClearComplete={onClearComplete} left={left} filters={filters}/>\n      </section>\n    </section>\n  )\n};","import React from 'react';\nimport ReactDom from 'react-dom';\nimport './style.css';\nimport App from './App/App';\n\nReactDom.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}