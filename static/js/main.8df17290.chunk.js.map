{"version":3,"sources":["header.js","todo-list-item.js","todo-list.js","TasksFilter.js","footer.js","index.js"],"names":["Header","state","label","onLabelChange","e","setState","target","value","addItem","this","props","className","onSubmit","preventDefault","type","placeholder","autoFocus","onChange","Component","TodoListItem","quest","title","id","done","date","checked","onCheckClick","onClick","onDelete","TodoList","quests","onEdit","map","elem","TasksFilter","onFilter","name","Footer","filters","onClearComplete","left","App","maxId","formatDistanceToNow","Date","now","idx","findIndex","el","newItem","slice","createItem","deleteItem","editItem","textContent","filter","length","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.8df17290.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './header.css';\r\n\r\nclass Header extends Component {\r\n\r\n  state = {\r\n    label: ''\r\n  }\r\n\r\n  onLabelChange = (e) => {\r\n    this.setState({\r\n      label: e.target.value\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const {addItem} = this.props\r\n\r\n    return (\r\n      <header className=\"header\">\r\n        <h1>todos</h1>\r\n        <form onSubmit={(e) => {\r\n          e.preventDefault();\r\n          addItem(this.state.label);\r\n          this.setState({\r\n            label: ''\r\n          })\r\n\r\n        }}>\r\n          <input\r\n            type='text'\r\n            className=\"new-todo\"\r\n            placeholder=\"What needs to be done?\"\r\n            autoFocus\r\n            onChange={this.onLabelChange}\r\n            value={this.state.label}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n\r\n};\r\n\r\nexport default Header;\r\n\r\n","import React, {Component} from \"react\";\r\nimport './todo-list-item.css';\r\n\r\n\r\nexport default class TodoListItem extends Component {\r\n\r\n  // state = {\r\n  //   done: false\r\n  // };\r\n  //\r\n  // onCheckClick = () => {\r\n  //   console.log(this.props.quest.done)\r\n  // };\r\n\r\n  render() {\r\n    let {title, id, className, done, date} = this.props.quest;\r\n    // const {done} = this.state;\r\n\r\n    if (done) {\r\n      className += ' completed'\r\n    }\r\n\r\n    return (\r\n      <li key={id} className={className}>\r\n        <div className=\"view\">\r\n          <input className=\"toggle\" type=\"checkbox\"\r\n                 checked={(done) ? true : false}\r\n                 onChange={this.props.onCheckClick} />\r\n          <label>\r\n            <span className=\"description\">{title}</span>\r\n            <span className=\"created\">{date}</span>\r\n          </label>\r\n          <button\r\n            className=\"icon icon-edit\"/>\r\n          <button\r\n            className=\"icon icon-destroy\"\r\n            onClick={this.props.onDelete}/>\r\n        </div>\r\n        {className === 'editing' ? <input type=\"text\" className=\"edit\" value=\"Editing task\"/> : null}\r\n      </li>\r\n    );\r\n  }\r\n};\r\n","import React, {Component} from \"react\";\r\nimport './todo-list.css';\r\nimport TodoListItem from \"./todo-list-item\";\r\n\r\nexport default class TodoList extends Component {\r\n\r\n  render() {\r\n    const {quests, onDelete, onEdit, onCheckClick} = this.props;\r\n\r\n    return (\r\n      <ul className='todo-list'>\r\n        {quests.map(elem => <TodoListItem\r\n          quest={elem}\r\n          onDelete={() => onDelete(elem.id)}\r\n          onEdit={() => onEdit(elem.id)}\r\n          onCheckClick={() => onCheckClick(elem.id)}\r\n         />)}\r\n      </ul>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n","import React, {Component} from \"react\";\r\nimport './TasksFilter.css'\r\n\r\nexport default class TasksFilter extends Component {\r\n\r\n  render() {\r\n    const {elem, onFilter} = this.props;\r\n\r\n    return (\r\n      <li key={elem.id}>\r\n        <button\r\n          className={elem.className}\r\n          onClick={onFilter}>{elem.name}</button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from \"react\";\r\nimport TasksFilter from \"./TasksFilter\";\r\nimport './footer.css'\r\n\r\nexport default class Footer extends Component {\r\n\r\n  filters = [\r\n    {id: 1, name: 'All', className: ''},\r\n    {id: 2, name: 'Active', className: ''},\r\n    {id: 3, name: 'Completed', className: ''},\r\n  ]\r\n\r\n  render () {\r\n    const {onFilter, onClearComplete, left} = this.props;\r\n    return (\r\n      <footer className=\"footer\">\r\n        <span className=\"todo-count\">{left} items left</span>\r\n        <ul className=\"filters\">\r\n          {this.filters.map(elem => {\r\n            return <TasksFilter elem={elem} onFilter={onFilter}/>\r\n          })}\r\n        </ul>\r\n        <button className=\"clear-completed\" onClick={onClearComplete}>Clear completed</button>\r\n      </footer>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n","import React, {Component} from \"react\";\r\nimport ReactDom from 'react-dom';\r\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow'\r\n\r\nimport './style.css';\r\n\r\nimport Header from \"./header\";\r\nimport TodoList from \"./todo-list\";\r\nimport Footer from \"./footer\";\r\n\r\nclass App extends Component {\r\n\r\n  maxId = 5;\r\n\r\n  state = {\r\n    quests: [\r\n      {id: 1, done: false, title: 'Заработать денег', className: '', date: `${formatDistanceToNow(new Date(2021, 5, 6))}`,},\r\n      {id: 2, done: false, title: 'Заплатить налоги', className: '', date: `${formatDistanceToNow(new Date(2021, 5, 12))}`,},\r\n      {id: 3, done: false, title: 'Спать спокойно', className: '', date: `${formatDistanceToNow(Date.now())}`,},\r\n    ]\r\n  }\r\n\r\n  onCheckClick = (id) => {\r\n    const idx = this.state.quests.findIndex((el) => el.id === id);\r\n    const newItem = {...this.state.quests[idx], done: !this.state.quests[idx].done}\r\n\r\n    this.setState(({quests}) => {\r\n      return {\r\n        quests: [...quests.slice(0, idx), newItem, ...quests.slice(idx + 1)]\r\n      }\r\n    });\r\n  }\r\n\r\n  createItem = (title) => {\r\n    return {\r\n      id: this.maxId++,\r\n      done: false,\r\n      title: title,\r\n      className: '',\r\n      date: formatDistanceToNow(Date.now())\r\n    };\r\n  }\r\n\r\n  addItem = (title) => {\r\n    const newItem = this.createItem(title);\r\n    this.setState(({quests}) => {\r\n      return {\r\n        quests: [newItem, ...quests]\r\n      }\r\n    })\r\n  }\r\n\r\n  deleteItem = (id) => {\r\n    this.setState(({quests}) => {\r\n      const idx = quests.findIndex((el) => el.id === id);\r\n      return {\r\n        quests: [...quests.slice(0, idx), ...quests.slice(idx + 1)]\r\n      }\r\n    })\r\n  };\r\n\r\n  editItem = (id) => {\r\n\r\n    this.setState(({quests}) => {\r\n\r\n      const idx = quests.findIndex((el) => el.id === id);\r\n      const title = quests[idx].title;\r\n      const newItem = this.createItem(title, 'editing');\r\n\r\n      return {\r\n        quests: [...quests.slice(0, idx), newItem, ...quests.slice(idx + 1)]\r\n      }\r\n    })\r\n  }\r\n\r\n  onFilter = (e) => {\r\n\r\n    this.setState(({quests}) => {\r\n      // eslint-disable-next-line default-case\r\n      switch (e.target.textContent) {\r\n        case 'All': return {\r\n          quests: quests.map(elem => {\r\n            elem.className = '';\r\n            return elem;\r\n          })\r\n        }\r\n        case 'Completed': return {\r\n          quests: quests.map(elem => {\r\n            if (!elem.done) elem.className = 'hidden';\r\n            else elem.className = '';\r\n            return elem;\r\n          })\r\n        }\r\n        case 'Active': return {\r\n          quests: quests.map(elem => {\r\n            if (elem.done) elem.className = 'hidden';\r\n            else elem.className = '';\r\n            return elem;\r\n          })\r\n        }\r\n      }\r\n\r\n    })\r\n\r\n  }\r\n\r\n  onClearComplete = () => {\r\n    this.setState(({quests}) => {\r\n      return {\r\n        quests: quests.filter(elem => !elem.done)\r\n      }\r\n    })\r\n}\r\n\r\n\r\n\r\n  render() {\r\n    let left = this.state.quests.filter(elem => !elem.done).length;\r\n\r\n    return (\r\n      <section className='todoapp'>\r\n        <Header addItem={this.addItem}/>\r\n        <section className='main'>\r\n          <TodoList\r\n            quests={this.state.quests}\r\n            onDelete={this.deleteItem}\r\n            onEdit={this.editItem}\r\n            onCheckClick={this.onCheckClick}\r\n            />\r\n          <Footer\r\n            onFilter={this.onFilter}\r\n            onClearComplete={this.onClearComplete}\r\n            left={left}/>\r\n        </section>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nReactDom.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}