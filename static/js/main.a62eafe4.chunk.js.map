{"version":3,"sources":["header.js","todo-list-item.js","todo-list.js","TasksFilter.js","footer.js","index.js"],"names":["Header","className","placeholder","autoFocus","TodoListItem","state","done","onCheckClick","setState","this","props","quest","title","id","type","onClick","onDelete","value","Component","TodoList","quests","map","elem","TasksFilter","name","Footer","filters","App","deleteItem","idx","findIndex","el","slice","ReactDom","render","document","getElementById"],"mappings":"0TAYeA,EATA,WACb,OACE,yBAAQC,UAAU,SAAlB,UACE,uCACA,uBAAOA,UAAU,WAAWC,YAAY,yBAAyBC,WAAS,QCH3DC,G,wNAEnBC,MAAQ,CACNC,MAAM,G,EAGRC,aAAe,WACb,EAAKC,UAAS,YACZ,MAAO,CACLF,MAFsB,EAAVA,U,4CAOlB,WACE,MAA6BG,KAAKC,MAAMC,MAAnCC,EAAL,EAAKA,MAAOC,EAAZ,EAAYA,GAAIZ,EAAhB,EAAgBA,UAOhB,OANeQ,KAAKJ,MAAbC,OAGLL,GAAa,aAIb,qBAAaA,UAAWA,EAAxB,UACE,sBAAKA,UAAU,OAAf,UACE,uBAAOA,UAAU,SAASa,KAAK,WAAWC,QAASN,KAAKF,eACxD,kCACE,sBAAMN,UAAU,cAAhB,SAA+BW,IAC/B,sBAAMX,UAAU,UAAhB,uCAEF,wBAAQA,UAAU,mBAClB,wBACEA,UAAU,oBACVc,QAASN,KAAKC,MAAMM,cAET,YAAdf,EAA0B,uBAAOa,KAAK,OAAOb,UAAU,OAAOgB,MAAM,iBAAmB,OAZjFJ,O,GAvB2BK,cCArBC,E,4JAEnB,WACE,MAA2BV,KAAKC,MAAzBU,EAAP,EAAOA,OAAQJ,EAAf,EAAeA,SAEf,OACE,oBAAIf,UAAU,YAAd,SACGmB,EAAOC,KAAI,SAAAC,GAAI,OAAI,cAAC,EAAD,CAClBX,MAAOW,EACPN,SAAU,kBAAMA,EAASM,EAAKT,gB,GATFK,aCDjBK,G,kKAEnB,WACE,IAAOD,EAAQb,KAAKC,MAAbY,KAEP,OACE,6BACE,wBAAQrB,UAAWqB,EAAKrB,UAAxB,SAAoCqB,EAAKE,QADlCF,EAAKT,Q,GANqBK,cCCpBO,G,kKAEnB,WAEE,OACE,yBAAQxB,UAAU,SAAlB,UACE,sBAAMA,UAAU,aAAhB,0BACA,oBAAIA,UAAU,UAAd,SACGyB,EAAQL,KAAI,SAAAC,GACX,OAAO,cAAC,EAAD,CAAaA,KAAMA,SAG9B,wBAAQrB,UAAU,kBAAlB,oC,GAZ4BiB,cAkB9BQ,EAAU,CACd,CAACb,GAAI,EAAGW,KAAM,MAAOvB,UAAW,YAChC,CAACY,GAAI,EAAGW,KAAM,SAAUvB,UAAW,IACnC,CAACY,GAAI,EAAGW,KAAM,YAAavB,UAAW,KChBlC0B,E,4MAEJtB,MAAQ,CACNe,OAAQ,CACN,CAAEP,GAAI,IAAKP,MAAM,EAAMM,MAAO,iBAAkBX,UAAW,IAC3D,CAAEY,GAAI,IAAKP,MAAM,EAAOM,MAAO,eAAgBX,UAAW,WAC1D,CAAEY,GAAI,IAAKP,MAAM,EAAOM,MAAO,cAAeX,UAAW,M,EAI7D2B,WAAa,SAACf,GACZ,EAAKL,UAAS,YAAe,IAAbY,EAAY,EAAZA,OACRS,EAAMT,EAAOU,WAAU,SAACC,GAAD,OAAQA,EAAGlB,KAAOA,KAE/C,MAAO,CACLO,OAAO,GAAD,mBAAMA,EAAOY,MAAM,EAAGH,IAAtB,YAA+BT,EAAOY,MAAMH,EAAM,U,4CAK9D,WACE,OACE,0BAAS5B,UAAU,UAAnB,UACE,cAAC,EAAD,IACA,0BAASA,UAAU,OAAnB,UACE,cAAC,EAAD,CACEmB,OAAQX,KAAKJ,MAAMe,OACnBJ,SAAUP,KAAKmB,aACjB,cAAC,EAAD,c,GA5BQV,aAmClBe,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a62eafe4.chunk.js","sourcesContent":["import React from 'react';\r\nimport './header.css';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>todos</h1>\r\n      <input className=\"new-todo\" placeholder=\"What needs to be done?\" autoFocus/>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n\r\n","import React, {Component} from \"react\";\r\nimport './todo-list-item.css';\r\n\r\n\r\nexport default class TodoListItem extends Component {\r\n\r\n  state = {\r\n    done: false\r\n  };\r\n\r\n  onCheckClick = () => {\r\n    this.setState(({done}) => {\r\n      return {\r\n        done: !done\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let {title, id, className} = this.props.quest;\r\n    const {done} = this.state;\r\n\r\n    if (done) {\r\n      className += 'completed'\r\n    }\r\n\r\n    return (\r\n      <li key={id} className={className}>\r\n        <div className=\"view\">\r\n          <input className=\"toggle\" type=\"checkbox\" onClick={this.onCheckClick}/>\r\n          <label>\r\n            <span className=\"description\">{title}</span>\r\n            <span className=\"created\">created 17 seconds ago</span>\r\n          </label>\r\n          <button className=\"icon icon-edit\"/>\r\n          <button\r\n            className=\"icon icon-destroy\"\r\n            onClick={this.props.onDelete}/>\r\n        </div>\r\n        {className === 'editing' ? <input type=\"text\" className=\"edit\" value=\"Editing task\"/> : null}\r\n      </li>\r\n    );\r\n  }\r\n};\r\n","import React, {Component} from \"react\";\r\nimport './todo-list.css';\r\nimport TodoListItem from \"./todo-list-item\";\r\n\r\nexport default class TodoList extends Component {\r\n\r\n  render() {\r\n    const {quests, onDelete} = this.props;\r\n\r\n    return (\r\n      <ul className='todo-list'>\r\n        {quests.map(elem => <TodoListItem\r\n          quest={elem}\r\n          onDelete={() => onDelete(elem.id)}/>)}\r\n      </ul>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n","import React, {Component} from \"react\";\r\nimport './TasksFilter.css'\r\n\r\nexport default class TasksFilter extends Component {\r\n\r\n  render() {\r\n    const {elem} = this.props;\r\n\r\n    return (\r\n      <li key={elem.id}>\r\n        <button className={elem.className}>{elem.name}</button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from \"react\";\r\nimport TasksFilter from \"./TasksFilter\";\r\nimport './footer.css'\r\n\r\nexport default class Footer extends Component {\r\n\r\n  render () {\r\n\r\n    return (\r\n      <footer className=\"footer\">\r\n        <span className=\"todo-count\">1 items left</span>\r\n        <ul className=\"filters\">\r\n          {filters.map(elem => {\r\n            return <TasksFilter elem={elem} />\r\n          })}\r\n        </ul>\r\n        <button className=\"clear-completed\">Clear completed</button>\r\n      </footer>\r\n    )\r\n  }\r\n}\r\n\r\nconst filters = [\r\n  {id: 1, name: 'All', className: 'selected'},\r\n  {id: 2, name: 'Active', className: ''},\r\n  {id: 3, name: 'Completed', className: ''},\r\n]\r\n","import React, {Component} from \"react\";\r\nimport ReactDom from 'react-dom';\r\n\r\nimport './style.css';\r\n\r\nimport Header from \"./header\";\r\nimport TodoList from \"./todo-list\";\r\nimport Footer from \"./footer\";\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    quests: [\r\n      { id: '1', done: true, title: 'Completed task', className: ''},\r\n      { id: '2', done: false, title: 'Editing task', className: 'editing'},\r\n      { id: '3', done: false, title: 'Active task', className: ''},\r\n    ]\r\n  }\r\n\r\n  deleteItem = (id) => {\r\n    this.setState(({quests}) => {\r\n      const idx = quests.findIndex((el) => el.id === id);\r\n\r\n      return {\r\n        quests: [...quests.slice(0, idx), ...quests.slice(idx + 1)]\r\n      }\r\n    })\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <section className='todoapp'>\r\n        <Header />\r\n        <section className='main'>\r\n          <TodoList\r\n            quests={this.state.quests}\r\n            onDelete={this.deleteItem}/>\r\n          <Footer />\r\n        </section>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nReactDom.render(<App />, document.getElementById('root'));"],"sourceRoot":""}