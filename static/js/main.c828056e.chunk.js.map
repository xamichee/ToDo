{"version":3,"sources":["Header/Header.jsx","TodoListItem/TodoListItem.jsx","TodoList/TodoList.jsx","TasksFilter/TasksFilter.jsx","Footer/Footer.jsx","App/initialState.js","App/App.jsx","index.jsx"],"names":["Header","state","label","onLabelChange","ev","setState","target","value","addItem","this","props","className","onSubmit","preventDefault","type","placeholder","onChange","Component","defaultProps","TodoListItem","timer","minutes","seconds","timeGo","interval","setInterval","getMinutes","getSeconds","timePause","clearInterval","onCheckClick","onDelete","onEdit","onEditSubmit","quest","title","id","done","created","minutesDraw","secondsDraw","classNames","completed","checked","aria-label","onClick","event","defaultValue","TodoList","quests","map","elem","TasksFilter","onFilter","name","Footer","onClearComplete","left","filters","initialState","date","Date","now","App","maxId","idx","findIndex","el","newItem","slice","createItem","formatDistanceToNow","addSuffix","includeSeconds","deleteItem","editItem","oldItem","textContent","filter","length","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.c828056e.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Header.css';\n\nexport default class Header extends Component {\n  static defaultProps = {\n    addItem: () => {},\n  };\n\n  static propTypes = {\n    addItem: PropTypes.func,\n  };\n\n  state = {\n    label: '',\n  };\n\n  onLabelChange = (ev) => {\n    this.setState({\n      label: ev.target.value,\n    });\n  };\n\n  render() {\n    const { addItem } = this.props;\n    const { label } = this.state;\n\n    return (\n      <header className=\"header\">\n        <h1>todos</h1>\n        <form\n          onSubmit={(ev) => {\n            ev.preventDefault();\n            addItem(label);\n            this.setState({\n              label: '',\n            });\n          }}\n        >\n          <input\n            type=\"text\"\n            className=\"new-todo\"\n            placeholder=\"What needs to be done?\"\n            onChange={this.onLabelChange}\n            value={label}\n          />\n        </form>\n      </header>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoListItem.css';\nimport classNames from 'classnames';\nimport { getMinutes, getSeconds } from 'date-fns';\n\nexport default class TodoListItem extends Component {\n  static defaultProps = {\n    onCheckClick: () => {},\n    onDelete: () => {},\n    onEdit: () => {},\n    onEditSubmit: () => {},\n  };\n\n  static propTypes = {\n    quest: PropTypes.shape({\n      id: PropTypes.number,\n      done: PropTypes.bool,\n      title: PropTypes.string,\n      className: PropTypes.string,\n      created: PropTypes.string,\n    }).isRequired,\n    onCheckClick: PropTypes.func,\n    onDelete: PropTypes.func,\n    onEdit: PropTypes.func,\n    onEditSubmit: PropTypes.func,\n  };\n\n  state = {\n    label: null,\n    timer: 0,\n    minutes: 0,\n    seconds: 0,\n  };\n\n  interval;\n\n  onLabelChange = (ev) => {\n    this.setState({\n      label: ev.target.value,\n    });\n  };\n\n  timeGo = () => {\n    const timerFunc = () => {\n      this.setState(({ timer }) => ({\n        timer: timer + 1000,\n        minutes: getMinutes(timer),\n        seconds: getSeconds(timer),\n      }));\n    };\n    this.interval = setInterval(timerFunc, 1000);\n  };\n\n  timePause = () => {\n    clearInterval(this.interval);\n  };\n\n  render() {\n    const { onCheckClick, onDelete, onEdit, onEditSubmit, quest } = this.props;\n    const { title, id, done, created } = quest;\n    let { className } = quest;\n    const { label, minutes, seconds } = this.state;\n\n    const minutesDraw = minutes < 10 ? `0${minutes}` : minutes;\n    const secondsDraw = seconds < 10 ? `0${seconds}` : seconds;\n\n    className = classNames(className, {\n      completed: done,\n    });\n\n    return (\n      <li className={className}>\n        <div className=\"view\">\n          <input className=\"toggle\" type=\"checkbox\" checked={!!done} onChange={onCheckClick} />\n          <label>\n            <span className=\"title\">{title}</span>\n            <span className=\"description timer\">\n              <button aria-label=\"play\" className=\"icon icon-play\" type=\"button\" onClick={this.timeGo} />\n              <button aria-label=\"pause\" className=\"icon icon-pause\" type=\"button\" onClick={this.timePause} />\n              <span className=\"time\">\n                {minutesDraw}:{secondsDraw}\n              </span>\n            </span>\n            <span className=\"description\">{created}</span>\n          </label>\n          <button aria-label=\"edit\" type=\"button\" className=\"icon icon-edit\" onClick={onEdit} />\n          <button aria-label=\"delete\" type=\"button\" className=\"icon icon-destroy\" onClick={onDelete} />\n        </div>\n        <form\n          onSubmit={(event) => {\n            event.preventDefault();\n            onEditSubmit(id, label);\n          }}\n        >\n          <input type=\"text\" className=\"edit\" defaultValue={title} onChange={this.onLabelChange} />\n        </form>\n      </li>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TodoList.css';\nimport TodoListItem from '../TodoListItem/TodoListItem';\n\nfunction TodoList(props) {\n  TodoList.defaultProps = {\n    onDelete: () => {},\n    onEdit: () => {},\n    onCheckClick: () => {},\n    onEditSubmit: () => {},\n  };\n\n  TodoList.propTypes = {\n    quests: PropTypes.arrayOf(PropTypes.object).isRequired,\n    onDelete: PropTypes.func,\n    onEdit: PropTypes.func,\n    onCheckClick: PropTypes.func,\n    onEditSubmit: PropTypes.func,\n  };\n\n  const { quests, onDelete, onEdit, onCheckClick, onEditSubmit } = props;\n\n  return (\n    <ul className=\"todo-list\">\n      {quests.map((elem) => (\n        <TodoListItem\n          key={elem.id}\n          quest={elem}\n          onDelete={() => onDelete(elem.id)}\n          onEdit={() => onEdit(elem.id)}\n          onCheckClick={() => onCheckClick(elem.id)}\n          onEditSubmit={onEditSubmit}\n        />\n      ))}\n    </ul>\n  );\n}\n\nexport default TodoList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './TasksFilter.css';\n\nfunction TasksFilter(props) {\n  const { elem, onFilter } = props;\n\n  TasksFilter.defaultProps = {\n    onFilter: () => {},\n  };\n\n  TasksFilter.propTypes = {\n    elem: PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string,\n      className: PropTypes.string,\n    }).isRequired,\n    onFilter: PropTypes.func,\n  };\n\n  return (\n    <li>\n      <button type=\"button\" className={elem.className} onClick={onFilter}>\n        {elem.name}\n      </button>\n    </li>\n  );\n}\n\nexport default TasksFilter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TasksFilter from '../TasksFilter/TasksFilter';\nimport './Footer.css';\n\nfunction Footer(props) {\n  const { onFilter, onClearComplete, left, filters } = props;\n\n  Footer.defaultProps = {\n    onFilter: () => {},\n    onClearComplete: () => {},\n  };\n\n  Footer.propTypes = {\n    onFilter: PropTypes.func,\n    onClearComplete: PropTypes.func,\n    left: PropTypes.number.isRequired,\n    filters: PropTypes.arrayOf(PropTypes.object).isRequired,\n  };\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\">{left} items left</span>\n      <ul className=\"filters\">\n        {filters.map((elem) => (\n          <TasksFilter key={elem.id} elem={elem} onFilter={onFilter} />\n        ))}\n      </ul>\n      <button type=\"button\" className=\"clear-completed\" onClick={onClearComplete}>\n        Clear completed\n      </button>\n    </footer>\n  );\n}\n\nexport default Footer;\n","const initialState = {\r\n  quests: [\r\n    { id: 1, done: false, title: 'Пункт 1', className: '', date: Date.now(), created: null },\r\n    { id: 2, done: false, title: 'Пункт 2', className: '', date: Date.now(), created: null },\r\n    { id: 3, done: false, title: 'Пункт 3', className: '', date: Date.now(), created: null },\r\n  ],\r\n\r\n  filters: [\r\n    { id: 1, name: 'All', className: 'selected' },\r\n    { id: 2, name: 'Active', className: '' },\r\n    { id: 3, name: 'Completed', className: '' },\r\n  ],\r\n};\r\n\r\nexport default initialState;","import React, { Component } from 'react';\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow';\n\nimport Header from '../Header/Header';\nimport TodoList from '../TodoList/TodoList';\nimport Footer from '../Footer/Footer';\n\nimport './App.css';\nimport initialState from './initialState';\n\nexport default class App extends Component {\n  maxId = 5;\n\n  interval = null;\n\n  state = initialState;\n\n  componentDidMount() {\n    this.setState(({ quests }) => ({\n      quests: quests.map((elem) => ({\n        ...elem,\n        created: formatDistanceToNow(elem.date, { addSuffix: true, includeSeconds: true }),\n      })),\n    }));\n\n    this.interval = setInterval(() => {\n      this.setState(({ quests }) => ({\n        quests: quests.map((elem) => ({\n          ...elem,\n          created: formatDistanceToNow(elem.date, { addSuffix: true, includeSeconds: true }),\n        })),\n      }));\n    }, 5000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  onCheckClick = (id) => {\n    const { quests } = this.state;\n    const idx = quests.findIndex((el) => el.id === id);\n    const newItem = { ...quests[idx], done: !quests[idx].done };\n    this.setState(() => ({\n      quests: [...quests.slice(0, idx), newItem, ...quests.slice(idx + 1)],\n    }));\n  };\n\n  createItem = (title) => {\n    this.maxId += 1;\n    return {\n      id: this.maxId,\n      done: false,\n      title,\n      className: '',\n      date: Date.now(),\n      created: formatDistanceToNow(Date.now(), { addSuffix: true, includeSeconds: true }),\n    };\n  };\n\n  addItem = (title) => {\n    const newItem = this.createItem(title);\n    this.setState(({ quests }) => ({\n      quests: [newItem, ...quests],\n    }));\n  };\n\n  deleteItem = (id) => {\n    this.setState(({ quests }) => {\n      const idx = quests.findIndex((el) => el.id === id);\n      return {\n        quests: [...quests.slice(0, idx), ...quests.slice(idx + 1)],\n      };\n    });\n  };\n\n  editItem = (id) => {\n    this.setState(({ quests }) => {\n      const idx = quests.findIndex((el) => el.id === id);\n      const newItem = { ...quests[idx], className: 'editing' };\n\n      return {\n        quests: [...quests.slice(0, idx), newItem, ...quests.slice(idx + 1)],\n      };\n    });\n  };\n\n  onEditSubmit = (id, value) => {\n    this.setState(({ quests }) => {\n      const idx = quests.findIndex((el) => el.id === id);\n      if (value) {\n        const newItem = { ...quests[idx], title: value, className: '' };\n        return {\n          quests: [...quests.slice(0, idx), newItem, ...quests.slice(idx + 1)],\n        };\n      }\n      const oldItem = { ...quests[idx], className: '' };\n      return {\n        quests: [...quests.slice(0, idx), oldItem, ...quests.slice(idx + 1)],\n      };\n    });\n  };\n\n  onFilter = (event) => {\n    this.setState(({ quests, filters }) => ({\n      quests: quests.map((elem) => {\n        switch (event.target.textContent) {\n          case 'All':\n            return { ...elem, className: '' };\n          case 'Completed':\n            if (!elem.done) return { ...elem, className: 'hidden' };\n            return { ...elem, className: '' };\n          case 'Active':\n            if (elem.done) return { ...elem, className: 'hidden' };\n            return { ...elem, className: '' };\n          default:\n            return null;\n        }\n      }),\n      filters: filters.map((elem) =>\n        event.target.textContent === elem.name ? { ...elem, className: 'selected' } : { ...elem, className: '' }\n      ),\n    }));\n  };\n\n  onClearComplete = () => {\n    this.setState(({ quests }) => ({\n      quests: quests.filter((elem) => !elem.done),\n    }));\n  };\n\n  render() {\n    const { quests, filters } = this.state;\n    const left = quests.filter((elem) => !elem.done).length;\n\n    return (\n      <section className=\"todoapp\">\n        <Header addItem={this.addItem} />\n        <section className=\"main\">\n          <TodoList\n            quests={quests}\n            onDelete={this.deleteItem}\n            onEdit={this.editItem}\n            onCheckClick={this.onCheckClick}\n            onEditSubmit={this.onEditSubmit}\n          />\n          <Footer onFilter={this.onFilter} onClearComplete={this.onClearComplete} left={left} filters={filters} />\n        </section>\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDom from 'react-dom';\n\nimport './style.css';\n\nimport App from './App/App';\n\nReactDom.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}