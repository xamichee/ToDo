{"version":3,"sources":["header.jsx","todo-list-item.jsx","todo-list.jsx","TasksFilter.jsx","footer.jsx","index.jsx"],"names":["Header","state","label","onLabelChange","err","setState","target","value","addItem","this","props","className","onSubmit","preventDefault","type","placeholder","onChange","Component","defaultProps","TodoListItem","ev","onCheckClick","onDelete","onEdit","onEditSubmit","quest","title","id","done","date","checked","formatDistanceToNow","aria-label","onClick","event","defaultValue","TodoList","quests","map","elem","TasksFilter","onFilter","name","Footer","onClearComplete","left","filters","App","maxId","Date","now","idx","findIndex","el","newItem","slice","createItem","deleteItem","editItem","oldItem","textContent","filter","length","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.d17b95d2.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './header.css';\r\n\r\nexport default class Header extends Component {\r\n\r\n  static defaultProps = {\r\n    addItem: () => {},\r\n  };\r\n\r\n  static propTypes = {\r\n    addItem: PropTypes.func\r\n  }\r\n\r\n  state = {\r\n    label: ''\r\n  }\r\n\r\n  onLabelChange = (err) => {\r\n    this.setState({\r\n      label: err.target.value\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const {addItem} = this.props;\r\n    const {label} = this.state;\r\n\r\n    return (\r\n      <header className=\"header\">\r\n        <h1>todos</h1>\r\n        <form onSubmit={(err) => {\r\n          err.preventDefault();\r\n          addItem(label);\r\n          this.setState({\r\n            label: ''\r\n          })\r\n\r\n        }}>\r\n          <input\r\n            type='text'\r\n            className=\"new-todo\"\r\n            placeholder=\"What needs to be done?\"\r\n            onChange={this.onLabelChange}\r\n            value={label}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n};","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport './todo-list-item.css';\r\nimport formatDistanceToNow from \"date-fns/formatDistanceToNow\";\r\n\r\nexport default class TodoListItem extends Component {\r\n\r\n  static defaultProps = {\r\n    onCheckClick: () => {},\r\n    onDelete: () => {},\r\n    onEdit: () => {},\r\n    onEditSubmit: () => {},\r\n  }\r\n\r\n  static propTypes = {\r\n    quest: PropTypes.shape({\r\n      id: PropTypes.number,\r\n      done: PropTypes.bool,\r\n      title: PropTypes.string,\r\n      className: PropTypes.string,\r\n      date: PropTypes.number\r\n    }).isRequired,\r\n    onCheckClick: PropTypes.func,\r\n    onDelete: PropTypes.func,\r\n    onEdit: PropTypes.func,\r\n    onEditSubmit: PropTypes.func,\r\n  }\r\n\r\n  state = {\r\n    label: ''\r\n  }\r\n\r\n  onLabelChange = (ev) => {\r\n    this.setState({\r\n      label: ev.target.value\r\n    })\r\n  }\r\n\r\n  render () {\r\n  const {onCheckClick, onDelete, onEdit, onEditSubmit, quest} = this.props;\r\n  const {title, id, done, date } = quest;\r\n  let { className } = quest;\r\n  const { label } = this.state;\r\n\r\n  if (done) className += ' completed';\r\n\r\n  return (\r\n    <li key={id} className={className}>\r\n      <div className=\"view\">\r\n        <input className=\"toggle\" type=\"checkbox\"\r\n               checked={!!done}\r\n               onChange={onCheckClick} />\r\n        <label>\r\n          <span className=\"description\">{title}</span>\r\n          <span className=\"created\">{formatDistanceToNow(date)}</span>\r\n        </label>\r\n        <button\r\n          aria-label=\"edit\"\r\n          type=\"button\"\r\n          className=\"icon icon-edit\"\r\n          onClick={onEdit} />\r\n        <button\r\n          aria-label=\"delete\"\r\n          type=\"button\"\r\n          className=\"icon icon-destroy\"\r\n          onClick={onDelete} />\r\n      </div>\r\n      <form onSubmit={(event) => {\r\n        event.preventDefault();\r\n        onEditSubmit(id, label);\r\n      }}>\r\n        <input\r\n          type=\"text\"\r\n          className=\"edit\"\r\n          defaultValue={title}\r\n          onChange={this.onLabelChange}\r\n        />\r\n      </form>\r\n    </li>\r\n  );\r\n}}\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport './todo-list.css';\r\nimport TodoListItem from \"./todo-list-item\";\r\n\r\nfunction TodoList(props) {\r\n  TodoList.defaultProps = {\r\n    onDelete: () => {},\r\n    onEdit: () => {},\r\n    onCheckClick: () => {},\r\n    onEditSubmit: () => {},\r\n  }\r\n\r\n  TodoList.propTypes = {\r\n    quests: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    onDelete: PropTypes.func,\r\n    onEdit: PropTypes.func,\r\n    onCheckClick: PropTypes.func,\r\n    onEditSubmit: PropTypes.func,\r\n  }\r\n\r\n  const {quests, onDelete, onEdit, onCheckClick, onEditSubmit} = props;\r\n\r\n  return (\r\n    <ul className='todo-list'>\r\n      {quests.map(elem => <TodoListItem\r\n        quest = {elem}\r\n        onDelete = {() => onDelete(elem.id)}\r\n        onEdit = {() => onEdit(elem.id)}\r\n        onCheckClick = {() => onCheckClick(elem.id)}\r\n        onEditSubmit = {onEditSubmit}\r\n      />)}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default TodoList;\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport './TasksFilter.css';\r\n\r\nfunction TasksFilter(props) {\r\n  const {elem, onFilter} = props;\r\n\r\n  TasksFilter.defaultProps = {\r\n    onFilter: () => {}\r\n  }\r\n\r\n  TasksFilter.propTypes = {\r\n    elem: PropTypes.shape({\r\n      id: PropTypes.number,\r\n      name: PropTypes.string,\r\n      className: PropTypes.string\r\n      }).isRequired,\r\n    onFilter: PropTypes.func\r\n  }\r\n\r\n  return (\r\n    <li key={elem.id}>\r\n      <button type=\"button\" className={elem.className} onClick={onFilter} >\r\n        {elem.name}\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default TasksFilter;\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport TasksFilter from \"./TasksFilter\";\r\nimport './footer.css'\r\n\r\nfunction Footer(props) {\r\n  const {onFilter, onClearComplete, left, filters} = props;\r\n\r\n  Footer.defaultProps = {\r\n    onFilter: () => {},\r\n    onClearComplete: () => {},\r\n  }\r\n\r\n  Footer.propTypes = {\r\n    onFilter: PropTypes.func,\r\n    onClearComplete: PropTypes.func,\r\n    left: PropTypes.number.isRequired,\r\n    filters: PropTypes.arrayOf(PropTypes.object).isRequired\r\n  }\r\n\r\n    return (\r\n      <footer className=\"footer\">\r\n        <span className=\"todo-count\">{left} items left</span>\r\n        <ul className=\"filters\">\r\n          {filters.map(elem => <TasksFilter\r\n              elem={elem}\r\n              onFilter={onFilter}\r\n            />)}\r\n        </ul>\r\n        <button\r\n          type=\"button\"\r\n          className=\"clear-completed\"\r\n          onClick={onClearComplete}>Clear completed\r\n        </button>\r\n      </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n","import React, {Component} from \"react\";\r\nimport ReactDom from 'react-dom';\r\n\r\nimport './style.css';\r\n\r\nimport Header from \"./header\";\r\nimport TodoList from \"./todo-list\";\r\nimport Footer from \"./footer\";\r\n\r\nclass App extends Component {\r\n\r\n  maxId = 5;\r\n\r\n  state = {\r\n    quests: [\r\n      {id: 1, done: false, title: 'Заработать денег', className: '', date: new Date(2021, 5, 6),},\r\n      {id: 2, done: false, title: 'Заплатить налоги', className: '', date: new Date(2021, 5, 12),},\r\n      {id: 3, done: false, title: 'Спать спокойно', className: '', date: Date.now(),},\r\n    ],\r\n\r\n    filters: [\r\n      {id: 1, name: 'All', className: 'selected'},\r\n      {id: 2, name: 'Active', className: ''},\r\n      {id: 3, name: 'Completed', className: ''},\r\n    ]\r\n  }\r\n\r\n  onCheckClick = (id) => {\r\n    const {quests} = this.state\r\n    const idx = quests.findIndex((el) => el.id === id);\r\n    const newItem = {...quests[idx], done: !quests[idx].done}\r\n    this.setState(() => ({\r\n        quests: [...quests.slice(0, idx), newItem, ...quests.slice(idx + 1)]\r\n      }));\r\n  }\r\n\r\n  createItem = (title) => {\r\n    this.maxId += 1;\r\n    return ({\r\n      id: this.maxId,\r\n      done: false,\r\n      title,\r\n      className: '',\r\n      date: Date.now()\r\n    })\r\n  }\r\n\r\n  addItem = (title) => {\r\n    const newItem = this.createItem(title);\r\n    this.setState(({quests}) => ({\r\n        quests: [newItem, ...quests]\r\n      }))\r\n  }\r\n\r\n  deleteItem = (id) => {\r\n    this.setState(({quests}) => {\r\n      const idx = quests.findIndex((el) => el.id === id);\r\n      return {\r\n        quests: [...quests.slice(0, idx), ...quests.slice(idx + 1)]\r\n      }\r\n    })\r\n  };\r\n\r\n  editItem = (id) => {\r\n\r\n    this.setState(({quests}) => {\r\n      const idx = quests.findIndex((el) => el.id === id);\r\n      const newItem = {...quests[idx], className: 'editing'};\r\n\r\n      return {\r\n        quests: [...quests.slice(0, idx), newItem, ...quests.slice(idx + 1)]\r\n      }\r\n    })\r\n  }\r\n\r\n  onEditSubmit = (id, value) => {\r\n    this.setState(({quests}) => {\r\n      const idx = quests.findIndex((el) => el.id === id);\r\n      if (value) {\r\n        const newItem = {...quests[idx], title: value, className: ''};\r\n        return {\r\n          quests: [...quests.slice(0, idx), newItem, ...quests.slice(idx + 1)]\r\n        }\r\n      } \r\n        const oldItem = {...quests[idx], className: ''};\r\n        return {\r\n          quests: [...quests.slice(0, idx), oldItem, ...quests.slice(idx + 1)]\r\n        }\r\n      \r\n    })\r\n  }\r\n\r\n  onFilter = (event) => {\r\n    this.setState(({quests, filters}) => ({\r\n        quests: quests.map(elem => {\r\n          switch (event.target.textContent) {\r\n            case 'All':\r\n              return {...elem, className: ''};\r\n            case 'Completed':\r\n              if (!elem.done) return {...elem, className: 'hidden'};\r\n              return {...elem, className: ''};\r\n            case 'Active':\r\n              if (elem.done) return {...elem, className: 'hidden'};\r\n              return {...elem, className: ''};\r\n            default:\r\n              return null;\r\n          }\r\n        }),\r\n        filters: filters.map(elem => (event.target.textContent === elem.name) ?\r\n          {...elem, className: 'selected'} :\r\n          {...elem, className: ''}\r\n        )\r\n      }))\r\n  }\r\n\r\n  onClearComplete = () => {\r\n    this.setState(({quests}) => ({\r\n        quests: quests.filter(elem => !elem.done)\r\n      }))\r\n  }\r\n\r\n  render() {\r\n    const {quests, filters} = this.state;\r\n    const left = quests.filter(elem => !elem.done).length;\r\n\r\n    return (\r\n      <section className='todoapp'>\r\n        <Header addItem={this.addItem}/>\r\n        <section className='main'>\r\n          <TodoList\r\n            quests={quests}\r\n            onDelete={this.deleteItem}\r\n            onEdit={this.editItem}\r\n            onCheckClick={this.onCheckClick}\r\n            onEditSubmit={this.onEditSubmit}\r\n          />\r\n          <Footer\r\n            onFilter={this.onFilter}\r\n            onClearComplete={this.onClearComplete}\r\n            left={left}\r\n            filters={filters}/>\r\n        </section>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nReactDom.render(<App/>, document.getElementById('root'));"],"sourceRoot":""}