{"version":3,"sources":["Handlers/handlers.js","Header/Header.jsx","Timer/Timer.jsx","ItemCreated/ItemCreated.jsx","TodoListItem/TodoListItem.jsx","TodoList/TodoList.jsx","TasksFilter/TasksFilter.jsx","InitialState/initialState.js","Footer/Footer.jsx","App/App.jsx","index.jsx"],"names":["maxId","addItem","title","callback","newItem","id","done","className","date","Date","now","created","formatDistanceToNow","addSuffix","includeSeconds","createItem","Quest","Header","setQuests","useState","label","setLabel","onSubmit","ev","preventDefault","type","placeholder","onChange","target","value","Timer","timer","setTimer","timerColor","setTimerColor","pause","setPause","minutes","getMinutes","seconds","getSeconds","minutesDraw","secondsDraw","useEffect","interval","setInterval","tmr","clearInterval","aria-label","name","onClick","style","color","ItemCreated","formattedDate","setCreated","TodoListItem","quest","quests","isEditing","setIsEditing","classNames","completed","checked","array","idx","findIndex","el","slice","onCheck","editItem","qsts","deleteItem","event","oldItem","onEditSubmit","defaultValue","TodoList","map","elem","TasksFilter","onFilter","todos","filtersList","Footer","setActiveFilter","filters","setFilters","left","filter","length","callback1","callback2","textContent","Filters","Quests","App","activeFilter","questsToRender","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.ee84812e.chunk.js","sourcesContent":["import formatDistanceToNow from \"date-fns/formatDistanceToNow\";\r\n\r\nlet maxId = 5;\r\n\r\nconst createItem = (title) => {\r\n  maxId += 1;\r\n  return {\r\n    id: maxId,\r\n    done: false,\r\n    title,\r\n    className: '',\r\n    date: Date.now(),\r\n    created: formatDistanceToNow(Date.now(), {addSuffix: true, includeSeconds: true}),\r\n  }\r\n};\r\n\r\nexport function addItem(title, callback) {\r\n  const newItem = createItem(title);\r\n  callback((Quest) => [newItem, ...Quest]);\r\n}\r\n\r\nexport function onCheck(id, array, callback) {\r\n  const idx = array.findIndex((el) => el.id === id);\r\n  const newItem = { ...array[idx], done: !array[idx].done };\r\n  callback((Quest) => [...Quest.slice(0, idx), newItem, ...Quest.slice(idx + 1)]);\r\n}\r\n\r\nexport function deleteItem(id, callback) {\r\n  callback(qsts => {\r\n    const idx = qsts.findIndex((el) => el.id === id);\r\n    return [...qsts.slice(0, idx), ...qsts.slice(idx + 1)]\r\n  });\r\n}\r\n\r\nexport function editItem (id, callback)  {\r\n  callback(Quest => {\r\n    const idx = Quest.findIndex((el) => el.id === id);\r\n    const newItem = { ...Quest[idx], className: 'editing' };\r\n\r\n    return [...Quest.slice(0, idx), newItem, ...Quest.slice(idx + 1)]\r\n  });\r\n}\r\n\r\nexport function onEditSubmit (id, value, callback) {\r\n  callback(Quest => {\r\n    const idx = Quest.findIndex((el) => el.id === id);\r\n    if (value) {\r\n      const newItem = { ...Quest[idx], title: value, className: '' };\r\n      return  [...Quest.slice(0, idx), newItem, ...Quest.slice(idx + 1)]\r\n    }\r\n    const oldItem = { ...Quest[idx], className: '' };\r\n    return [...Quest.slice(0, idx), oldItem, ...Quest.slice(idx + 1)]\r\n  });\r\n}\r\n\r\nexport function onFilter (event, callback1, callback2) {\r\n  callback1(event.target.textContent);\r\n  callback2(Filters => Filters.map((elem) =>\r\n    event.target.textContent === elem.name ? { ...elem, className: 'selected' } : { ...elem, className: '' })\r\n  );\r\n}","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {addItem} from \"../Handlers/handlers\";\r\nimport './Header.css';\r\n\r\nexport default function Header({setQuests}) {\r\n  const [label, setLabel] = useState('');\r\n\r\n  Header.propTypes = {\r\n    setQuests: PropTypes.func.isRequired,\r\n  }\r\n\r\n  const addTodoItem = (title) => addItem(title, setQuests);\r\n\r\n  const onLabelChange = (ev) => setLabel(ev.target.value);\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>todos</h1>\r\n      <form\r\n        onSubmit={(ev) => {\r\n          ev.preventDefault();\r\n          addTodoItem(label);\r\n          setLabel('');\r\n        }}\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          className=\"new-todo\"\r\n          placeholder=\"What needs to be done?\"\r\n          onChange={onLabelChange}\r\n          value={label}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {getMinutes, getSeconds} from \"date-fns\";\r\nimport './Timer.css'\r\n\r\nfunction Timer({done}) {\r\n\r\n  Timer.propTypes = {\r\n    done: PropTypes.bool.isRequired,\r\n  }\r\n\r\n  const [timer, setTimer] = useState(0);\r\n  const [timerColor, setTimerColor] = useState('black');\r\n  const [pause, setPause] = useState(true);\r\n\r\n  const minutes = getMinutes(timer);\r\n  const seconds = getSeconds(timer);\r\n  const minutesDraw = minutes < 10 ? `0${minutes}` : minutes;\r\n  const secondsDraw = seconds < 10 ? `0${seconds}` : seconds;\r\n\r\n  const timeGo = () => {\r\n    if (pause && !done) {\r\n      setTimerColor('red');\r\n      setPause(false);\r\n    }\r\n  };\r\n\r\n  const timePause = () => {\r\n    if (!pause) {\r\n      setPause(true);\r\n      setTimerColor('black');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let interval;\r\n    if (!pause) {\r\n      const timerFunc = () => {\r\n        setTimer(tmr => tmr + 1000);\r\n      }\r\n      interval = setInterval(timerFunc, 1000);\r\n    }\r\n    return () => {\r\n      clearInterval(interval);\r\n    }\r\n  }, [pause]);\r\n\r\n  return (\r\n    <div className=\"timer_wrapper\">\r\n      <span className=\"description timer\">\r\n        <button aria-label=\"play\" className=\"icon icon-play\" type=\"button\" name=\"play\" onClick={timeGo}/>\r\n        <button aria-label=\"pause\" className=\"icon icon-pause\" type=\"button\" name=\"pause\" onClick={timePause}/>\r\n        <span className=\"time\" style={{color: timerColor}}>\r\n          {minutesDraw}:{secondsDraw}\r\n        </span>\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Timer;","import React, {useEffect, useState} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport formatDistanceToNow from \"date-fns/formatDistanceToNow\";\r\n\r\nfunction ItemCreated({date}) {\r\n  ItemCreated.propTypes = {\r\n    date: PropTypes.number.isRequired\r\n  };\r\n\r\n  const formattedDate = formatDistanceToNow(date, {addSuffix: true, includeSeconds: true})\r\n\r\n  const [created, setCreated] = useState(formattedDate);\r\n\r\n  useEffect(() => {\r\n\r\n    const interval = setInterval(() => {\r\n      setCreated( formatDistanceToNow(date, {addSuffix: true, includeSeconds: true}))\r\n    }, 5000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, [date])\r\n\r\n  return (\r\n    <div className=\"created\">\r\n      <span className=\"description\">{created}</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ItemCreated;","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './TodoListItem.css';\r\nimport classNames from 'classnames';\r\nimport Timer from \"../Timer/Timer\";\r\nimport ItemCreated from \"../ItemCreated/ItemCreated\";\r\n\r\n\r\nimport {onCheck, deleteItem, editItem, onEditSubmit} from \"../Handlers/handlers\";\r\n\r\nexport default function TodoListItem({ quest, quests, setQuests, isEditing, setIsEditing }) {\r\n\r\n  const {title, id, done, date} = quest;\r\n\r\n  let {className} = quest;\r\n\r\n  const [label, setLabel] = useState(title);\r\n\r\n  TodoListItem.propTypes = {\r\n    quests: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    quest: PropTypes.shape({\r\n      id: PropTypes.number,\r\n      done: PropTypes.bool,\r\n      title: PropTypes.string,\r\n      className: PropTypes.string,\r\n      date: PropTypes.number,\r\n    }).isRequired,\r\n    setQuests: PropTypes.func.isRequired,\r\n    isEditing: PropTypes.bool.isRequired,\r\n    setIsEditing: PropTypes.func.isRequired,\r\n  }\r\n\r\n  const onLabelChange = (ev) => setLabel(ev.target.value);\r\n\r\n  const toggleCheck = () => {\r\n    // timePause();\r\n    onCheck(id, quests, setQuests)\r\n  }\r\n\r\n  className = classNames(className, {\r\n    completed: done,\r\n  });\r\n\r\n  const onEdit = () => {\r\n    if (!isEditing) {\r\n      setIsEditing(true);\r\n      editItem(id, setQuests);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <li className={className}>\r\n      <div className=\"view\">\r\n        <input className=\"toggle\" type=\"checkbox\" checked={!!done} onChange={toggleCheck}/>\r\n        <label>\r\n          <span className=\"title\">{title}</span>\r\n          <Timer done={done}/>\r\n          <ItemCreated date={date} />\r\n        </label>\r\n        <button aria-label=\"edit\" type=\"button\" className=\"icon icon-edit\" onClick={onEdit}/>\r\n        <button aria-label=\"delete\" type=\"button\" className=\"icon icon-destroy\" onClick={() => deleteItem(id, setQuests)}/>\r\n      </div>\r\n      <form\r\n        onSubmit={(event) => {\r\n          event.preventDefault();\r\n          onEditSubmit(id, label, setQuests);\r\n          setIsEditing(false);\r\n        }}\r\n      >\r\n        <input type=\"text\" className=\"edit\" defaultValue={title} onChange={onLabelChange}/>\r\n      </form>\r\n    </li>\r\n  );\r\n};","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TodoListItem from '../TodoListItem/TodoListItem';\r\n\r\nimport './TodoList.css';\r\n\r\nexport default function TodoList({quests, setQuests}) {\r\n\r\n  const [isEditing, setIsEditing] = useState(false);\r\n\r\n  TodoList.propTypes = {\r\n    quests: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    setQuests: PropTypes.func.isRequired,\r\n  };\r\n\r\n  return (\r\n    <ul className=\"todo-list\">\r\n      {quests.map((elem) => (\r\n        <TodoListItem\r\n          key={elem.id}\r\n          quest={elem}\r\n          quests={quests}\r\n          setQuests={setQuests}\r\n          isEditing={isEditing}\r\n          setIsEditing={setIsEditing}/>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './TasksFilter.css';\r\n\r\nexport default function TasksFilter({elem, onFilter}) {\r\n\r\n  TasksFilter.propTypes = {\r\n    elem: PropTypes.shape({\r\n      id: PropTypes.number,\r\n      name: PropTypes.string,\r\n      className: PropTypes.string,\r\n    }).isRequired,\r\n    onFilter: PropTypes.func.isRequired,\r\n  };\r\n\r\n  return (\r\n    <li>\r\n      <button type=\"button\" className={elem.className} onClick={onFilter}>\r\n        {elem.name}\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n","export const todos = [\r\n  {id: 1, done: false, title: 'Пункт 1', className: '', date: Date.now(), created: null},\r\n  {id: 2, done: false, title: 'Пункт 2', className: '', date: Date.now(), created: null},\r\n  {id: 3, done: false, title: 'Пункт 3', className: '', date: Date.now(), created: null},\r\n];\r\n\r\nexport const filtersList = [\r\n  { id: 1, name: 'All', className: 'selected' },\r\n  { id: 2, name: 'Active', className: '' },\r\n  { id: 3, name: 'Completed', className: '' },\r\n];\r\n","import React, {useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport TasksFilter from '../TasksFilter/TasksFilter';\r\nimport './Footer.css';\r\nimport {filtersList} from \"../InitialState/initialState\";\r\nimport {onFilter} from \"../Handlers/handlers\";\r\n\r\nexport default function Footer({ quests, setQuests, setActiveFilter}) {\r\n  const [filters, setFilters] = useState(filtersList);\r\n\r\n  Footer.propTypes = {\r\n    setActiveFilter: PropTypes.func.isRequired,\r\n    quests: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    setQuests: PropTypes.func.isRequired,\r\n  };\r\n\r\n  const onClearComplete = () => {\r\n    setQuests(Quests => Quests.filter((elem) => !elem.done))\r\n  };\r\n\r\n  const left = quests.filter((elem) => !elem.done).length;\r\n\r\n  return (\r\n    <footer className=\"footer\">\r\n      <span className=\"todo-count\">{left} items left</span>\r\n      <ul className=\"filters\">\r\n        {filters.map((elem) => (\r\n          <TasksFilter\r\n            key={elem.id}\r\n            elem={elem}\r\n            onFilter={event => onFilter(event, setActiveFilter, setFilters)}\r\n          />\r\n        ))}\r\n      </ul>\r\n      <button type=\"button\" className=\"clear-completed\" onClick={onClearComplete}>\r\n        Clear completed\r\n      </button>\r\n    </footer>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\n\r\nimport Header from '../Header/Header';\r\nimport TodoList from '../TodoList/TodoList';\r\nimport Footer from '../Footer/Footer';\r\n\r\nimport './App.css';\r\nimport {todos} from '../InitialState/initialState';\r\n\r\nexport default function App() {\r\n  const [quests, setQuests] = useState(todos);\r\n  const [activeFilter, setActiveFilter] = useState(\"All\");\r\n\r\n  const questsToRender = quests.filter((elem) => {\r\n    switch (activeFilter) {\r\n      case 'Completed': return (elem.done)\r\n      case 'Active': return (!elem.done)\r\n      default: return true;\r\n    }\r\n  });\r\n\r\n  return (\r\n    <section className=\"todoapp\">\r\n      <Header setQuests={setQuests}/>\r\n      <section className=\"main\">\r\n        <TodoList\r\n          quests={questsToRender}\r\n          setQuests={setQuests}\r\n        />\r\n        <Footer\r\n          setActiveFilter={setActiveFilter}\r\n          setQuests={setQuests}\r\n          quests={quests}\r\n        />\r\n      </section>\r\n    </section>\r\n  );\r\n};\r\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport './style.css';\nimport App from './App/App';\n\nReactDom.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}